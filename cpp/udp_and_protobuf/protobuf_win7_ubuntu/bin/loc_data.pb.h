// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loc_data.proto

#ifndef PROTOBUF_loc_5fdata_2eproto__INCLUDED
#define PROTOBUF_loc_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_loc_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLocDataImpl();
void InitDefaultsLocData();
inline void InitDefaults() {
  InitDefaultsLocData();
}
}  // namespace protobuf_loc_5fdata_2eproto
class LocData;
class LocDataDefaultTypeInternal;
extern LocDataDefaultTypeInternal _LocData_default_instance_;

// ===================================================================

class LocData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LocData) */ {
 public:
  LocData();
  virtual ~LocData();

  LocData(const LocData& from);

  inline LocData& operator=(const LocData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocData(LocData&& from) noexcept
    : LocData() {
    *this = ::std::move(from);
  }

  inline LocData& operator=(LocData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocData* internal_default_instance() {
    return reinterpret_cast<const LocData*>(
               &_LocData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LocData* other);
  friend void swap(LocData& a, LocData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocData* New() const PROTOBUF_FINAL { return New(NULL); }

  LocData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocData& from);
  void MergeFrom(const LocData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double lat = 1;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // required double lon = 2;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  double lon() const;
  void set_lon(double value);

  // optional int32 valid = 3;
  bool has_valid() const;
  void clear_valid();
  static const int kValidFieldNumber = 3;
  ::google::protobuf::int32 valid() const;
  void set_valid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LocData)
 private:
  void set_has_lat();
  void clear_has_lat();
  void set_has_lon();
  void clear_has_lon();
  void set_has_valid();
  void clear_has_valid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double lat_;
  double lon_;
  ::google::protobuf::int32 valid_;
  friend struct ::protobuf_loc_5fdata_2eproto::TableStruct;
  friend void ::protobuf_loc_5fdata_2eproto::InitDefaultsLocDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocData

// required double lat = 1;
inline bool LocData::has_lat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocData::set_has_lat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocData::clear_has_lat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocData::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline double LocData::lat() const {
  // @@protoc_insertion_point(field_get:LocData.lat)
  return lat_;
}
inline void LocData::set_lat(double value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:LocData.lat)
}

// required double lon = 2;
inline bool LocData::has_lon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocData::set_has_lon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocData::clear_has_lon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocData::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline double LocData::lon() const {
  // @@protoc_insertion_point(field_get:LocData.lon)
  return lon_;
}
inline void LocData::set_lon(double value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:LocData.lon)
}

// optional int32 valid = 3;
inline bool LocData::has_valid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocData::set_has_valid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LocData::clear_has_valid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LocData::clear_valid() {
  valid_ = 0;
  clear_has_valid();
}
inline ::google::protobuf::int32 LocData::valid() const {
  // @@protoc_insertion_point(field_get:LocData.valid)
  return valid_;
}
inline void LocData::set_valid(::google::protobuf::int32 value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:LocData.valid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_loc_5fdata_2eproto__INCLUDED
