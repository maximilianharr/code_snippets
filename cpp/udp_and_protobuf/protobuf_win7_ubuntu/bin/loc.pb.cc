// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loc.proto

#include "loc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class locDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<loc>
      _instance;
} _loc_default_instance_;
namespace protobuf_loc_2eproto {
void InitDefaultslocImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_loc_default_instance_;
    new (ptr) ::loc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::loc::InitAsDefaultInstance();
}

void InitDefaultsloc() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslocImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, j_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::loc, l_),
  1,
  2,
  3,
  4,
  6,
  5,
  7,
  8,
  10,
  9,
  11,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::loc)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_loc_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "loc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tloc.proto\"\211\001\n\003loc\022\t\n\001a\030\001 \002(\001\022\t\n\001b\030\002 \002("
      "\002\022\t\n\001c\030\003 \002(\005\022\t\n\001d\030\004 \002(\003\022\t\n\001e\030\005 \002(\r\022\t\n\001f\030"
      "\006 \002(\004\022\t\n\001g\030\007 \002(\021\022\t\n\001h\030\010 \002(\022\022\t\n\001i\030\t \002(\007\022\t"
      "\n\001j\030\n \002(\006\022\t\n\001k\030\013 \002(\010\022\t\n\001l\030\014 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 151);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "loc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_loc_2eproto

// ===================================================================

void loc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loc::kAFieldNumber;
const int loc::kBFieldNumber;
const int loc::kCFieldNumber;
const int loc::kDFieldNumber;
const int loc::kEFieldNumber;
const int loc::kFFieldNumber;
const int loc::kGFieldNumber;
const int loc::kHFieldNumber;
const int loc::kIFieldNumber;
const int loc::kJFieldNumber;
const int loc::kKFieldNumber;
const int loc::kLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loc::loc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_loc_2eproto::InitDefaultsloc();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:loc)
}
loc::loc(const loc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_l()) {
    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&k_) -
    reinterpret_cast<char*>(&a_)) + sizeof(k_));
  // @@protoc_insertion_point(copy_constructor:loc)
}

void loc::SharedCtor() {
  _cached_size_ = 0;
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&k_) -
      reinterpret_cast<char*>(&a_)) + sizeof(k_));
}

loc::~loc() {
  // @@protoc_insertion_point(destructor:loc)
  SharedDtor();
}

void loc::SharedDtor() {
  l_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void loc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loc::descriptor() {
  ::protobuf_loc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_loc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const loc& loc::default_instance() {
  ::protobuf_loc_2eproto::InitDefaultsloc();
  return *internal_default_instance();
}

loc* loc::New(::google::protobuf::Arena* arena) const {
  loc* n = new loc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loc::Clear() {
// @@protoc_insertion_point(message_clear_start:loc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!l_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*l_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&g_) -
        reinterpret_cast<char*>(&a_)) + sizeof(g_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&h_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&k_) -
        reinterpret_cast<char*>(&h_)) + sizeof(k_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool loc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:loc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 d = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_e();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 f = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 g = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 h = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 i = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed64 j = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_j();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &j_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool k = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_k();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string l = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_l()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->l().data(), static_cast<int>(this->l().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loc.l");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:loc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:loc)
  return false;
#undef DO_
}

void loc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:loc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double a = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->a(), output);
  }

  // required float b = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->b(), output);
  }

  // required int32 c = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->c(), output);
  }

  // required int64 d = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->d(), output);
  }

  // required uint32 e = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->e(), output);
  }

  // required uint64 f = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->f(), output);
  }

  // required sint32 g = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->g(), output);
  }

  // required sint64 h = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->h(), output);
  }

  // required fixed32 i = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->i(), output);
  }

  // required fixed64 j = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->j(), output);
  }

  // required bool k = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->k(), output);
  }

  // required string l = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->l().data(), static_cast<int>(this->l().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loc.l");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->l(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:loc)
}

::google::protobuf::uint8* loc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:loc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double a = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->a(), target);
  }

  // required float b = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->b(), target);
  }

  // required int32 c = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->c(), target);
  }

  // required int64 d = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->d(), target);
  }

  // required uint32 e = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->e(), target);
  }

  // required uint64 f = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->f(), target);
  }

  // required sint32 g = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->g(), target);
  }

  // required sint64 h = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->h(), target);
  }

  // required fixed32 i = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->i(), target);
  }

  // required fixed64 j = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->j(), target);
  }

  // required bool k = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->k(), target);
  }

  // required string l = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->l().data(), static_cast<int>(this->l().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loc.l");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->l(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loc)
  return target;
}

size_t loc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:loc)
  size_t total_size = 0;

  if (has_l()) {
    // required string l = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->l());
  }

  if (has_a()) {
    // required double a = 1;
    total_size += 1 + 8;
  }

  if (has_b()) {
    // required float b = 2;
    total_size += 1 + 4;
  }

  if (has_c()) {
    // required int32 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  if (has_d()) {
    // required int64 d = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->d());
  }

  if (has_f()) {
    // required uint64 f = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->f());
  }

  if (has_e()) {
    // required uint32 e = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->e());
  }

  if (has_g()) {
    // required sint32 g = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->g());
  }

  if (has_h()) {
    // required sint64 h = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->h());
  }

  if (has_j()) {
    // required fixed64 j = 10;
    total_size += 1 + 8;
  }

  if (has_i()) {
    // required fixed32 i = 9;
    total_size += 1 + 4;
  }

  if (has_k()) {
    // required bool k = 11;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t loc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:loc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000fff) ^ 0x00000fff) == 0) {  // All required fields are present.
    // required string l = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->l());

    // required double a = 1;
    total_size += 1 + 8;

    // required float b = 2;
    total_size += 1 + 4;

    // required int32 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());

    // required int64 d = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->d());

    // required uint64 f = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->f());

    // required uint32 e = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->e());

    // required sint32 g = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->g());

    // required sint64 h = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->h());

    // required fixed64 j = 10;
    total_size += 1 + 8;

    // required fixed32 i = 9;
    total_size += 1 + 4;

    // required bool k = 11;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:loc)
  GOOGLE_DCHECK_NE(&from, this);
  const loc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:loc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:loc)
    MergeFrom(*source);
  }
}

void loc::MergeFrom(const loc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:loc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_l();
      l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
    }
    if (cached_has_bits & 0x00000002u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000004u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000008u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000010u) {
      d_ = from.d_;
    }
    if (cached_has_bits & 0x00000020u) {
      f_ = from.f_;
    }
    if (cached_has_bits & 0x00000040u) {
      e_ = from.e_;
    }
    if (cached_has_bits & 0x00000080u) {
      g_ = from.g_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      h_ = from.h_;
    }
    if (cached_has_bits & 0x00000200u) {
      j_ = from.j_;
    }
    if (cached_has_bits & 0x00000400u) {
      i_ = from.i_;
    }
    if (cached_has_bits & 0x00000800u) {
      k_ = from.k_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void loc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:loc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loc::CopyFrom(const loc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:loc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;
  return true;
}

void loc::Swap(loc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loc::InternalSwap(loc* other) {
  using std::swap;
  l_.Swap(&other->l_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  swap(c_, other->c_);
  swap(d_, other->d_);
  swap(f_, other->f_);
  swap(e_, other->e_);
  swap(g_, other->g_);
  swap(h_, other->h_);
  swap(j_, other->j_);
  swap(i_, other->i_);
  swap(k_, other->k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loc::GetMetadata() const {
  protobuf_loc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_loc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
