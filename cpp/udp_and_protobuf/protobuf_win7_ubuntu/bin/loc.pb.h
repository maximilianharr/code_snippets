// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loc.proto

#ifndef PROTOBUF_loc_2eproto__INCLUDED
#define PROTOBUF_loc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_loc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultslocImpl();
void InitDefaultsloc();
inline void InitDefaults() {
  InitDefaultsloc();
}
}  // namespace protobuf_loc_2eproto
class loc;
class locDefaultTypeInternal;
extern locDefaultTypeInternal _loc_default_instance_;

// ===================================================================

class loc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:loc) */ {
 public:
  loc();
  virtual ~loc();

  loc(const loc& from);

  inline loc& operator=(const loc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  loc(loc&& from) noexcept
    : loc() {
    *this = ::std::move(from);
  }

  inline loc& operator=(loc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const loc* internal_default_instance() {
    return reinterpret_cast<const loc*>(
               &_loc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(loc* other);
  friend void swap(loc& a, loc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline loc* New() const PROTOBUF_FINAL { return New(NULL); }

  loc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loc& from);
  void MergeFrom(const loc& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string l = 12;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 12;
  const ::std::string& l() const;
  void set_l(const ::std::string& value);
  #if LANG_CXX11
  void set_l(::std::string&& value);
  #endif
  void set_l(const char* value);
  void set_l(const char* value, size_t size);
  ::std::string* mutable_l();
  ::std::string* release_l();
  void set_allocated_l(::std::string* l);

  // required double a = 1;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 1;
  double a() const;
  void set_a(double value);

  // required float b = 2;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 2;
  float b() const;
  void set_b(float value);

  // required int32 c = 3;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::int32 c() const;
  void set_c(::google::protobuf::int32 value);

  // required int64 d = 4;
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 4;
  ::google::protobuf::int64 d() const;
  void set_d(::google::protobuf::int64 value);

  // required uint64 f = 6;
  bool has_f() const;
  void clear_f();
  static const int kFFieldNumber = 6;
  ::google::protobuf::uint64 f() const;
  void set_f(::google::protobuf::uint64 value);

  // required uint32 e = 5;
  bool has_e() const;
  void clear_e();
  static const int kEFieldNumber = 5;
  ::google::protobuf::uint32 e() const;
  void set_e(::google::protobuf::uint32 value);

  // required sint32 g = 7;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 7;
  ::google::protobuf::int32 g() const;
  void set_g(::google::protobuf::int32 value);

  // required sint64 h = 8;
  bool has_h() const;
  void clear_h();
  static const int kHFieldNumber = 8;
  ::google::protobuf::int64 h() const;
  void set_h(::google::protobuf::int64 value);

  // required fixed64 j = 10;
  bool has_j() const;
  void clear_j();
  static const int kJFieldNumber = 10;
  ::google::protobuf::uint64 j() const;
  void set_j(::google::protobuf::uint64 value);

  // required fixed32 i = 9;
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 9;
  ::google::protobuf::uint32 i() const;
  void set_i(::google::protobuf::uint32 value);

  // required bool k = 11;
  bool has_k() const;
  void clear_k();
  static const int kKFieldNumber = 11;
  bool k() const;
  void set_k(bool value);

  // @@protoc_insertion_point(class_scope:loc)
 private:
  void set_has_a();
  void clear_has_a();
  void set_has_b();
  void clear_has_b();
  void set_has_c();
  void clear_has_c();
  void set_has_d();
  void clear_has_d();
  void set_has_e();
  void clear_has_e();
  void set_has_f();
  void clear_has_f();
  void set_has_g();
  void clear_has_g();
  void set_has_h();
  void clear_has_h();
  void set_has_i();
  void clear_has_i();
  void set_has_j();
  void clear_has_j();
  void set_has_k();
  void clear_has_k();
  void set_has_l();
  void clear_has_l();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr l_;
  double a_;
  float b_;
  ::google::protobuf::int32 c_;
  ::google::protobuf::int64 d_;
  ::google::protobuf::uint64 f_;
  ::google::protobuf::uint32 e_;
  ::google::protobuf::int32 g_;
  ::google::protobuf::int64 h_;
  ::google::protobuf::uint64 j_;
  ::google::protobuf::uint32 i_;
  bool k_;
  friend struct ::protobuf_loc_2eproto::TableStruct;
  friend void ::protobuf_loc_2eproto::InitDefaultslocImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// loc

// required double a = 1;
inline bool loc::has_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void loc::set_has_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void loc::clear_has_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void loc::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline double loc::a() const {
  // @@protoc_insertion_point(field_get:loc.a)
  return a_;
}
inline void loc::set_a(double value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:loc.a)
}

// required float b = 2;
inline bool loc::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void loc::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void loc::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void loc::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline float loc::b() const {
  // @@protoc_insertion_point(field_get:loc.b)
  return b_;
}
inline void loc::set_b(float value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:loc.b)
}

// required int32 c = 3;
inline bool loc::has_c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void loc::set_has_c() {
  _has_bits_[0] |= 0x00000008u;
}
inline void loc::clear_has_c() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void loc::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline ::google::protobuf::int32 loc::c() const {
  // @@protoc_insertion_point(field_get:loc.c)
  return c_;
}
inline void loc::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:loc.c)
}

// required int64 d = 4;
inline bool loc::has_d() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void loc::set_has_d() {
  _has_bits_[0] |= 0x00000010u;
}
inline void loc::clear_has_d() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void loc::clear_d() {
  d_ = GOOGLE_LONGLONG(0);
  clear_has_d();
}
inline ::google::protobuf::int64 loc::d() const {
  // @@protoc_insertion_point(field_get:loc.d)
  return d_;
}
inline void loc::set_d(::google::protobuf::int64 value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:loc.d)
}

// required uint32 e = 5;
inline bool loc::has_e() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void loc::set_has_e() {
  _has_bits_[0] |= 0x00000040u;
}
inline void loc::clear_has_e() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void loc::clear_e() {
  e_ = 0u;
  clear_has_e();
}
inline ::google::protobuf::uint32 loc::e() const {
  // @@protoc_insertion_point(field_get:loc.e)
  return e_;
}
inline void loc::set_e(::google::protobuf::uint32 value) {
  set_has_e();
  e_ = value;
  // @@protoc_insertion_point(field_set:loc.e)
}

// required uint64 f = 6;
inline bool loc::has_f() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void loc::set_has_f() {
  _has_bits_[0] |= 0x00000020u;
}
inline void loc::clear_has_f() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void loc::clear_f() {
  f_ = GOOGLE_ULONGLONG(0);
  clear_has_f();
}
inline ::google::protobuf::uint64 loc::f() const {
  // @@protoc_insertion_point(field_get:loc.f)
  return f_;
}
inline void loc::set_f(::google::protobuf::uint64 value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:loc.f)
}

// required sint32 g = 7;
inline bool loc::has_g() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void loc::set_has_g() {
  _has_bits_[0] |= 0x00000080u;
}
inline void loc::clear_has_g() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void loc::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline ::google::protobuf::int32 loc::g() const {
  // @@protoc_insertion_point(field_get:loc.g)
  return g_;
}
inline void loc::set_g(::google::protobuf::int32 value) {
  set_has_g();
  g_ = value;
  // @@protoc_insertion_point(field_set:loc.g)
}

// required sint64 h = 8;
inline bool loc::has_h() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void loc::set_has_h() {
  _has_bits_[0] |= 0x00000100u;
}
inline void loc::clear_has_h() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void loc::clear_h() {
  h_ = GOOGLE_LONGLONG(0);
  clear_has_h();
}
inline ::google::protobuf::int64 loc::h() const {
  // @@protoc_insertion_point(field_get:loc.h)
  return h_;
}
inline void loc::set_h(::google::protobuf::int64 value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:loc.h)
}

// required fixed32 i = 9;
inline bool loc::has_i() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void loc::set_has_i() {
  _has_bits_[0] |= 0x00000400u;
}
inline void loc::clear_has_i() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void loc::clear_i() {
  i_ = 0u;
  clear_has_i();
}
inline ::google::protobuf::uint32 loc::i() const {
  // @@protoc_insertion_point(field_get:loc.i)
  return i_;
}
inline void loc::set_i(::google::protobuf::uint32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:loc.i)
}

// required fixed64 j = 10;
inline bool loc::has_j() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void loc::set_has_j() {
  _has_bits_[0] |= 0x00000200u;
}
inline void loc::clear_has_j() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void loc::clear_j() {
  j_ = GOOGLE_ULONGLONG(0);
  clear_has_j();
}
inline ::google::protobuf::uint64 loc::j() const {
  // @@protoc_insertion_point(field_get:loc.j)
  return j_;
}
inline void loc::set_j(::google::protobuf::uint64 value) {
  set_has_j();
  j_ = value;
  // @@protoc_insertion_point(field_set:loc.j)
}

// required bool k = 11;
inline bool loc::has_k() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void loc::set_has_k() {
  _has_bits_[0] |= 0x00000800u;
}
inline void loc::clear_has_k() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void loc::clear_k() {
  k_ = false;
  clear_has_k();
}
inline bool loc::k() const {
  // @@protoc_insertion_point(field_get:loc.k)
  return k_;
}
inline void loc::set_k(bool value) {
  set_has_k();
  k_ = value;
  // @@protoc_insertion_point(field_set:loc.k)
}

// required string l = 12;
inline bool loc::has_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void loc::set_has_l() {
  _has_bits_[0] |= 0x00000001u;
}
inline void loc::clear_has_l() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void loc::clear_l() {
  l_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_l();
}
inline const ::std::string& loc::l() const {
  // @@protoc_insertion_point(field_get:loc.l)
  return l_.GetNoArena();
}
inline void loc::set_l(const ::std::string& value) {
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:loc.l)
}
#if LANG_CXX11
inline void loc::set_l(::std::string&& value) {
  set_has_l();
  l_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:loc.l)
}
#endif
inline void loc::set_l(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:loc.l)
}
inline void loc::set_l(const char* value, size_t size) {
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:loc.l)
}
inline ::std::string* loc::mutable_l() {
  set_has_l();
  // @@protoc_insertion_point(field_mutable:loc.l)
  return l_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loc::release_l() {
  // @@protoc_insertion_point(field_release:loc.l)
  clear_has_l();
  return l_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loc::set_allocated_l(::std::string* l) {
  if (l != NULL) {
    set_has_l();
  } else {
    clear_has_l();
  }
  l_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), l);
  // @@protoc_insertion_point(field_set_allocated:loc.l)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_loc_2eproto__INCLUDED
