##### SQL commands
# Dump Database
pg_dump -U postgres -h localhost -p 5432 -d ${DB_SOURCE} > ${DB_SOURCE}.sql


# Show all Databases
psql -U postgres -p 5432 -c '\l'


##### SQL queries

-- extension
CREATE EXTENSION IF NOT EXISTS dblink;

-- check db connection
SELECT dblink_connect('host=localhost user=postgres password=postgres dbname=test_hks_parkinglot_change2_v1_0_24');

-- get lanesegments
SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT id, spine FROM lanesegments') AS lanesegment(mapdb_id INT, mapdb_spine geography)
WHERE mapdb_id IN( SELECT id_target FROM lookup_lanesegments WHERE id_source < 0);

SELECT * FROM lookup_lanesegments;

SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT id, spine FROM lanesegments ') AS lanesegment(mapdb_id INT, mapdb_spine geography)
ORDER BY mapdb_id ASC;

SELECT *
FROM lookup_mapobjects
WHERE id_source != id_target;



-----------------

-- extension
CREATE EXTENSION IF NOT EXISTS dblink;

-- Clear lanesegment table
DROP TABLE IF EXISTS boundarysegments;
DROP TABLE IF EXISTS lanesegments;
DROP TABLE IF EXISTS mapobjects;
DROP TABLE IF EXISTS roadreflines;

-------------------------------------------------------------
-- copy source boundarysegments
SELECT *
INTO boundarysegments
FROM dblink('dbname=test_hks_parkinglot_change1_v1_0_24','SELECT segid, line FROM boundarysegments') AS boundarysegments(segid BIGINT, line geography)
WHERE segid IN( SELECT id_source FROM lookup_boundarysegments WHERE id_target = 0);

-- copy target boundarysegments
INSERT INTO boundarysegments
SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT segid, line FROM boundarysegments') boundarysegments(segid BIGINT, line geography)
WHERE segid IN( SELECT id_target FROM lookup_boundarysegments WHERE id_source = 0);

-------------------------------------------------------------
-- copy source lanesegments
SELECT *
INTO lanesegments
FROM dblink('dbname=test_hks_parkinglot_change1_v1_0_24','SELECT id, spine FROM lanesegments') AS lanesegments(id BIGINT, spine geography)
WHERE id IN( SELECT id_source FROM lookup_lanesegments WHERE id_target = 0);

-- copy target lanesegments
INSERT INTO lanesegments
SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT id, spine FROM lanesegments') AS lanesegments(id BIGINT, spine geography)
WHERE id IN( SELECT id_target FROM lookup_lanesegments WHERE id_source = 0);

-------------------------------------------------------------
-- copy source mapobjects
SELECT *
INTO mapobjects
FROM dblink('dbname=test_hks_parkinglot_change1_v1_0_24','SELECT objid, refpos FROM mapobjects') AS mapobjects(objid BIGINT, refpos geography)
WHERE objid IN( SELECT id_source FROM lookup_mapobjects WHERE id_target = 0);

-- copy target mapobjects
INSERT INTO mapobjects
SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT objid, refpos FROM mapobjects') AS mapobjects(objid BIGINT, refpos geography)
WHERE objid IN( SELECT id_target FROM lookup_mapobjects WHERE id_source = 0);

-------------------------------------------------------------
-- copy source roadreflines
SELECT *
INTO roadreflines
FROM dblink('dbname=test_hks_parkinglot_change1_v1_0_24','SELECT id, line FROM roadreflines') AS roadreflines(id BIGINT, line geography)
WHERE id IN( SELECT id_source FROM lookup_roadreflines WHERE id_target = 0);

-- copy target roadreflines
INSERT INTO roadreflines
SELECT *
FROM dblink('dbname=test_hks_parkinglot_change2_v1_0_24','SELECT id, line FROM roadreflines') AS roadreflines(id BIGINT, line geography)
WHERE id IN( SELECT id_target FROM lookup_roadreflines WHERE id_source = 0);
